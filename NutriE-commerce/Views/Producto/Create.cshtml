@model NutriE_commerce.Models.tblProducto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style type="text/css">
        a.my-class {
            color: white
        }

            a.my-class:active {
                color: white
            }

            a.my-class:link {
                color: white
            }

            a.my-class:visited {
                color: white
            }
    </style>
</head>
<body>
    @using (Html.BeginForm("Create", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style="color:white">
            <center><h1>Crear Producto</h1></center>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <form class="row g-3">
                <div class="row">
                    <div class="col-md-6">
                        <label for="inputEmail4" class="form-label">Categoría</label>
                        @Html.DropDownList("catId", null, htmlAttributes: new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.catId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label for="inputPassword4" class="form-label">Código</label>
                        @Html.EditorFor(model => model.proCodigo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.proCodigo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <label for="inputEmail4" class="form-label">Nombre</label>
                        @Html.EditorFor(model => model.proNombre, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.proNombre, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label for="inputPassword4" class="form-label">Stock</label>
                        @Html.EditorFor(model => model.proStock, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.proStock, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="col-4">
                    <label for="inputAddress" class="form-label">Descripción</label>
                    @Html.EditorFor(model => model.proDesc, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.proDesc, "", new { @class = "text-danger" })
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <label for="inputCity" class="form-label">Observación</label>
                        @Html.EditorFor(model => model.proObser, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.proObser, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        <label for="inputZip" class="form-label">Precio</label>
                        @Html.EditorFor(model => model.proPrecio, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.proPrecio, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        <label for="inputState" class="form-label">Fecha</label>
                        @Html.EditorFor(model => model.proFecha, new { htmlAttributes = new { @class = "form-control datepicker", required = "required" } })
                        @Html.ValidationMessageFor(model => model.proFecha, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-2">
                        <label for="inputZip" class="form-label">Estado</label>
                        @Html.EditorFor(model => model.proEstado, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.proEstado, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <label for="inputState" class="form-label" style="padding-left:1.5%">Imagen</label>
                    <div class="col-6">
                        <div class="col-md-10">
                            <input type="file" name="FileBase" id="proImagen" />
                            @Html.ValidationMessageFor(model => model.proImagen, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <br />
                <div class="row">
                    <center>
                        <div class="col-12" style="padding-left:1.5%">
                            <button type="submit" class="btn btn-primary">Crear nuevo Producto</button>
                        </div>
                    </center>
                </div>
            </form>

        </div>

    }
    <br />
    <center>
        <div class="container">
            <button type="button" class="btn btn-primary">@Html.ActionLink("Ir a Productos", "Index", null, new { @class = "my-class" })</button>

        </div>

    </center>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">
        $(function () { // will trigger when the document is ready
            $('.datepicker').datepicker({

                format: 'yyyy/mm/dd'
            }); //Initialise any date pickers
        });
        </script>
    }
</body>
</html>